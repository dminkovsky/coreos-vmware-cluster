#!/bin/bash

# Get the directory in which the script resides
pushd $(dirname $0) > /dev/null; CURRABSPATH=$(readlink -nf "$(pwd)"); popd > /dev/null;

BASE=coreos_production_vmware_insecure
BASE_VMX="${BASE}/${BASE}.vmx"
CONFIG_DRIVE=config_drive

prep() {
    ln -s /Applications/VMware\ Fusion.app/Contents/Library/vmrun /usr/local/bin
    ln -s /Applications/VMware\ Fusion.app/Contents/Library/vmware-vdiskmanager /usr/local/bin
    ln -s /Applications/VMware\ Fusion.app/Contents/Library/mkisofs /usr/local/bin
    if [ "$1" = -download ]; then
        curl -LO "http://alpha.release.core-os.net/amd64-usr/current/$BASE.zip"
    fi
    unzip -o "$BASE.zip" -d "$BASE"
    vmware-vdiskmanager -x 75GB "${BASE}/${BASE}_image.vmdk"
    # VMWare memory size must be multiple of 4
    sed -i '' -e 's/memsize = "1024"/memsize = "452"/' "$BASE_VMX"
}

build_cd() {
    local n="$1"
    local cd="$CONFIG_DRIVE"
    local cd_label=config-2  # This name required by cloudinit convention
    local cd_root="${cd}/openstack/latest"
    local cd_user_data="${cd_root}/user_data"

    mkdir -p "$cd_root"
    sed -e "s/{{ N }}/${n}/g" user_data > "$cd_user_data"
    mkisofs -R -V "$cd_label" -o "${n}/${cd}.iso" "${cd}/"
}

clone() {
    local n="$1"
    local base_vmx="$BASE_VMX"
    local clone_vmx="${n}/${n}.vmx"
    local clone_name="core${n}"
    local cd="$CONFIG_DRIVE"

    # Make a linked clone of base image
    vmrun -T fusion clone "$base_vmx" "$clone_vmx" linked -cloneName="$clone_name"

    # Make a cloud-init config drive ISO
    build_cd "$n"

    # Add the cloud-init config drive to the .vmx as virtual CD-ROM disk
    cat <<-EOF >> "$clone_vmx"
	sata0.present = "TRUE"
	sata0:0.present = "TRUE"
	sata0:0.fileName = "${PWD}/${n}/${cd}.iso"
	sata0:0.deviceType = "cdrom-image"
	sata0:0.startConnected = "TRUE"
	sata0.pciSlotNumber = "36"
	EOF
}

case "$1" in
    prep)
        prep "$2"
        ;;
    clone)
        clone "$2"
        ;;
    make)
        for N in 1 2 3; do clone "$N"; done
        ;;
    list)
        vmrun -T fusion list
        ;;
    start)
        if [ "$3" = gui ]; then GUI=gui; else GUI=nogui; fi
        vmrun -T fusion start "${2}/${2}.vmx" "$GUI"
        ;;
    stop)
        vmrun -T fusion stop "${2}/${2}.vmx" hard
        ;;
    build_cd)
        build_cd "$2"
        ;;
esac
